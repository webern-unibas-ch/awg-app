name: CI Workflow
on:
    push:
        # trigger on all branches except for dependabot-triggered push events
        branches-ignore: [dependabot/**]
        tags:
            - 'v*' # trigger on all tags
        paths-ignore:
            - '**.md' # ignore changes in markdown files
    pull_request:
        branches: [develop]
        types: [opened, synchronize, reopened]

# globals
env:
    # general settings
    MAIN_REPO_OWNER: webern-unibas-ch # Main repo owner (default: webern-unibas-ch; should not be changed)

jobs:
    test:
        name: Run tests (Node v${{ matrix.node-version }}, ${{ matrix.os }})
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [16, 18.16, 20.x]
        steps:
            - name: Checkout repo
              uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # ratchet:actions/checkout@v3
              with:
                  fetch-depth: 0 # Get all history and branches
            - name: Set up node ${{ matrix.node-version}}
              uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # ratchet:actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'yarn'
            - name: yarn install dependencies
              run: |
                  yarn install
            - name: Run CI tests with coverage
              run: |
                  yarn run test:ci
            - name: Upload code coverage
              if: matrix.node-version == 18.16 # upload coverage report for current node version only
              uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # ratchet:codecov/codecov-action@v3.1.4
              with:
                  flags: unittests
                  env_vars: ${{ matrix.os }}, ${{ matrix.node-version }}
            - name: Perform SonarCloud Analysis
              if: matrix.node-version == 18.16 && github.event_name != 'pull_request' && github.repository_owner == env.MAIN_REPO_OWNER # perform SonarCloud analysis only for current node version and not with pull requests or forks(token issue)
              uses: SonarSource/sonarcloud-github-action@db501078e936e4b4c8773d1bb949ba9ddb7b6b6a # ratchet:SonarSource/sonarcloud-github-action@v1.9
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            - name: Test build for GH Pages
              run: |
                  yarn run build:gh
    deploy:
        name: Deploy app from main (Node v${{ matrix.node-version }}, ${{ matrix.os }})
        runs-on: ${{ matrix.os }}
        needs: test
        # run only on main

        if: github.ref == 'refs/heads/main'
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [18.16]
        steps:
            - name: Checkout repo
              uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # ratchet:actions/checkout@v3
            - name: Set up node ${{ matrix.node-version}}
              uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # ratchet:actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'yarn'
            - name: yarn install dependencies
              run: |
                  yarn install
            - name: Build app for GH Pages
              run: |
                  yarn run build:gh
            - name: Deploy to GH Pages
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  yarn run deploy:ci
    release:
        name: Create Release from tag
        runs-on: ${{ matrix.os }}
        needs: test
        # run only on tags

        if: startsWith(github.ref, 'refs/tags/')
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [18.16]
        steps:
            - name: Get tag version
              id: get_version
              run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
            - name: Create Release
              id: create_release
              if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
              uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # ratchet:softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAG_VERSION: ${{ steps.get_version.outputs.VERSION }}
              with:
                  name: Release ${{ env.TAG_VERSION }}
                  body: "A prototype web application for the online edition of the [Anton Webern Gesamtausgabe](https://www.anton-webern.ch), located at the Department of Musicology of the University of Basel. It is written in [Angular](https://angular.io/) and runs on [edition.anton-webern.ch](https://edition.anton-webern.ch).\n\n Changes since last release: https://github.com/${{ github.repository }}/blob/${{ env.TAG_VERSION }}/CHANGELOG.md"
                  draft: false
                  prerelease: false
