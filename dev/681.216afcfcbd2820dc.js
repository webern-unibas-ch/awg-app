(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[681],{5681:(a,c,e)=>{"use strict";e.r(c),e.d(c,{EditionReportModule:()=>b});var s=e(1635),t=e(4438),o=e(9584),T=e(5664);var x=e(1457),_=e.n(x),u=e(444),O=e(5562);let f=class{constructor(n){this.utils=n,this.navigateToReportFragmentRequest=new t.bkB,this.openModalRequest=new t.bkB,this.selectSvgSheetRequest=new t.bkB,this.FIRM_SIGNS=O.kD,this.ref=this}getWritingInstruments(n){const i=n.secondary?.join(", ");return`${i?`${n.main}; ${i}`:n.main}.`}getWritingMaterialFirmSign(n){return n&&this.FIRM_SIGNS[n]?this.FIRM_SIGNS[n]:{route:"",full:"Not a known firm sign.",short:"unknown"}}getWritingMaterialItemLocation(n){if(!this.utils.isNotEmptyObject(n)||!this.utils.isNotEmptyArray(n.folios))return"";const i=n.folios.map(r=>r.endsWith("v")||r.endsWith("r")?`${r.slice(0,-1)}<sup>${r.slice(-1)}</sup>`:r),l=i.length>1?`${i.slice(0,-1).join(", ")} und ${i.slice(-1)}`:i[0];return`${n.info?`${n.info} `:""}auf Bl. ${l}${n.position?` ${n.position}`:""}`}getWritingMaterialFormat(n){const{orientation:i,height:l,width:m}=n,g=r=>this.utils.isNotEmptyObject(r)?r.uncertainty?`${r.uncertainty} ${r.value}`:r.value:"";return`Format: ${i} ${g(l)} \xd7 ${g(m)} mm`}getWritingMaterialSystems(n){return[`${n.number} ${1===n.number?"System":"Systeme"}`,n.info&&` (${n.info})`,n.addendum&&`, ${n.addendum}`].filter(Boolean).join("")}navigateToReportFragment(n){n&&this.navigateToReportFragmentRequest.emit(n)}openModal(n){n&&this.openModalRequest.emit(n)}selectSvgSheet(n,i){i&&this.selectSvgSheetRequest.emit({complexId:n,sheetId:i})}static#n=this.ctorParameters=()=>[{type:u.QY}];static#t=this.propDecorators={sourceDescriptionListData:[{type:t.pde}],navigateToReportFragmentRequest:[{type:t.k7i}],openModalRequest:[{type:t.k7i}],selectSvgSheetRequest:[{type:t.k7i}]}};f=(0,s.Cg)([(0,t.uAl)({selector:"awg-source-description",template:'@if (sourceDescriptionListData) {\n    <div class="awg-source-description-list">\n        @for (sourceDescription of sourceDescriptionListData.sources; track sourceDescription) {\n            <div class="awg-source-description card mb-2" [id]="sourceDescription.id">\n                <div class="card-body">\n                    <div class="awg-source-description-head">\n                        @if (sourceDescription.siglum) {\n                            <p class="awg-source-description-siglum-container bold">\n                                @if (sourceDescription.missing) {\n                                    <span>[</span>\n                                }\n                                <span class="awg-source-description-siglum">{{ sourceDescription.siglum }}</span>\n                                @if (sourceDescription.siglumAddendum) {\n                                    <span class="awg-source-description-siglum-addendum"\n                                        ><sup>{{ sourceDescription.siglumAddendum }}</sup></span\n                                    >\n                                }\n                                @if (sourceDescription.missing) {\n                                    <span>]</span>\n                                }\n                            </p>\n                        }\n                        @if (sourceDescription.type) {\n                            <p\n                                class="awg-source-description-type"\n                                [compile-html]="sourceDescription.type"\n                                [compile-html-ref]="ref"></p>\n                        }\n                        @if (sourceDescription.location) {\n                            <p\n                                class="awg-source-description-location"\n                                [compile-html]="sourceDescription.location"\n                                [compile-html-ref]="ref"></p>\n                        }\n                    </div>\n                    @if (utils.isNotEmptyObject(sourceDescription.description)) {\n                        <div class="awg-source-description-body">\n                            \x3c!-- description --\x3e\n                            @if (utils.isNotEmptyArray(sourceDescription.description.desc)) {\n                                <p class="awg-source-description-desc">\n                                    @for (\n                                        description of sourceDescription.description.desc;\n                                        track description;\n                                        let lastDesc = $last\n                                    ) {\n                                        <span [compile-html]="description" [compile-html-ref]="ref"></span>\n                                        @if (!lastDesc) {\n                                            <br />\n                                        }\n                                    }\n                                </p>\n                            }\n                            \x3c!-- writingMaterial --\x3e\n                            @if (\n                                sourceDescription.description.writingMaterialString &&\n                                !sourceDescription.description.writingMaterial\n                            ) {\n                                <p class="awg-source-description-writing-material">\n                                    <span class="smallcaps">Beschreibstoff:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.writingMaterialString"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            @if (sourceDescription.description.writingMaterial) {\n                                <p class="awg-source-description-writing-material">\n                                    <span class="smallcaps">Beschreibstoff:&nbsp;</span>\n\n                                    @for (\n                                        writingMaterial of sourceDescription?.description?.writingMaterial;\n                                        track writingMaterial;\n                                        let lastWritingMaterial = $last\n                                    ) {\n                                        @if (writingMaterial.paperType) {\n                                            <span class="awg-source-description-writing-material-paper-type">{{\n                                                writingMaterial.paperType\n                                            }}</span\n                                            >,\n                                        }\n                                        @if (utils.isNotEmptyObject(writingMaterial.systems)) {\n                                            <span class="awg-source-description-writing-material-systems">\n                                                {{ getWritingMaterialSystems(writingMaterial.systems) }},\n                                            </span>\n                                        }\n                                        @if (utils.isNotEmptyObject(writingMaterial.format)) {\n                                            <span class="awg-source-description-writing-material-format">\n                                                {{ getWritingMaterialFormat(writingMaterial.format) }}</span\n                                            >,\n                                        }\n                                        @if (\n                                            utils.isNotEmptyObject(writingMaterial.firmSign) &&\n                                            (writingMaterial.firmSign?.variant || writingMaterial.firmSign?.alt)\n                                        ) {\n                                            <span class="awg-source-description-writing-material-firm-sign"\n                                                ><span>Firmenzeichen: </span>\n                                                @if (writingMaterial.firmSign.variant) {\n                                                    <br /><img\n                                                        class="img-thumbnail"\n                                                        [src]="\n                                                            getWritingMaterialFirmSign(writingMaterial.firmSign.variant)\n                                                                ?.route\n                                                        "\n                                                        [title]="\n                                                            getWritingMaterialFirmSign(writingMaterial.firmSign.variant)\n                                                                ?.full\n                                                        "\n                                                        [alt]="\n                                                            getWritingMaterialFirmSign(writingMaterial.firmSign.variant)\n                                                                ?.short\n                                                        " /><br />\n                                                } @else {\n                                                    <span\n                                                        [compile-html]="writingMaterial.firmSign.alt"\n                                                        [compile-html-ref]="ref"></span\n                                                    >&nbsp;\n                                                }\n                                            </span>\n                                            @for (location of writingMaterial.firmSign.location; track location) {\n                                                <span [innerHTML]="getWritingMaterialItemLocation(location)"></span>\n                                            }\n                                        } @else {\n                                            <span>kein Firmenzeichen</span>\n                                        }\n                                        @if (\n                                            utils.isNotEmptyObject(writingMaterial.watermark) &&\n                                            writingMaterial.watermark?.variant\n                                        ) {\n                                            <span class="awg-source-description-writing-material-watermark"\n                                                ><span>, Wasserzeichen: </span>\n                                                @if (writingMaterial.watermark.variant) {\n                                                    <span\n                                                        ><em>{{ writingMaterial.watermark.variant }}</em></span\n                                                    >&nbsp;\n                                                }\n                                            </span>\n                                            @for (location of writingMaterial.watermark.location; track location) {\n                                                <span [innerHTML]="getWritingMaterialItemLocation(location)"></span>\n                                            }\n                                            <span>&nbsp;lesbar</span>\n                                        }\n                                        @if (writingMaterial.folioAddendum) {\n                                            <span>&nbsp;(Bl. {{ writingMaterial.folioAddendum }})</span>\n                                        }\n                                        @if (!lastWritingMaterial) {\n                                            <span>;</span><br />\n                                        } @else {\n                                            <span>.</span>\n                                        }\n                                    }\n                                </p>\n                            }\n                            \x3c!-- writingInstruments --\x3e\n                            @if (utils.isNotEmptyObject(sourceDescription.description.writingInstruments)) {\n                                @if (sourceDescription.description.writingInstruments.main) {\n                                    <p class="awg-source-description-writing-instruments">\n                                        <span class="smallcaps">Schreibstoff:&nbsp;</span>\n                                        <span\n                                            [compile-html]="\n                                                getWritingInstruments(sourceDescription.description.writingInstruments)\n                                            "\n                                            [compile-html-ref]="ref"></span>\n                                    </p>\n                                }\n                            }\n                            \x3c!-- title --\x3e\n                            @if (sourceDescription.description.title) {\n                                <p class="awg-source-description-title">\n                                    <span class="smallcaps">Titel:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.title"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- date --\x3e\n                            @if (sourceDescription.description.date) {\n                                <p class="awg-source-description-date">\n                                    <span class="smallcaps">Datierung:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.date"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- pagination --\x3e\n                            @if (sourceDescription.description.pagination) {\n                                <p class="awg-source-description-pagination">\n                                    <span class="smallcaps">Paginierung:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.pagination"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- measureNumbers --\x3e\n                            @if (sourceDescription.description.measureNumbers) {\n                                <p class="awg-source-description-measure-numbers">\n                                    <span class="smallcaps">Taktzahlen:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.measureNumbers"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- instrumentation --\x3e\n                            @if (sourceDescription.description.instrumentation) {\n                                <p class="awg-source-description-instrumentation">\n                                    <span class="smallcaps">Instrumentenvorsatz:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.instrumentation"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- annotations --\x3e\n                            @if (sourceDescription.description.annotations) {\n                                <p class="awg-source-description-annotations">\n                                    <span class="smallcaps">Eintragungen:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.annotations"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- content --\x3e\n                            @if (utils.isNotEmptyArray(sourceDescription.description.content)) {\n                                <div class="awg-source-description-content">\n                                    <p class="no-para"><span class="smallcaps">Inhalt:</span></p>\n                                    @for (content of sourceDescription.description.content; track content) {\n                                        <p class="half-para">\n                                            \x3c!-- content.itemDescription --\x3e\n                                            @if (content.item || content.itemDescription) {\n                                                <span class="awg-source-description-content-item">\n                                                    @if (content.item && utils.isNotEmptyObject(content.itemLinkTo)) {\n                                                        <a\n                                                            (click)="\n                                                                selectSvgSheet(\n                                                                    content.itemLinkTo.complexId,\n                                                                    content.itemLinkTo.sheetId\n                                                                )\n                                                            "\n                                                            ><strong>{{ content.item }}</strong></a\n                                                        >\n                                                    }\n                                                    @if (content.item && !utils.isNotEmptyObject(content.itemLinkTo)) {\n                                                        <strong>{{ content.item }}</strong>\n                                                    }\n                                                    @if (content.item && content.itemDescription) {\n                                                        <span>&nbsp;</span>\n                                                    }\n                                                    @if (content.itemDescription) {\n                                                        <span class="awg-source-description-content-item-description"\n                                                            ><span\n                                                                [compile-html]="content.itemDescription"\n                                                                [compile-html-ref]="ref"></span\n                                                        ></span>\n                                                    }\n                                                    <span>:</span><br />\n                                                </span>\n                                            }\n                                            \x3c!-- content.folios --\x3e\n                                            @if (utils.isNotEmptyArray(content.folios)) {\n                                                @for (folio of content.folios; track folio; let lastFolio = $last) {\n                                                    @if (folio.folio) {\n                                                        <span\n                                                            class="awg-source-description-content-item-folio"\n                                                            [ngClass]="{\n                                                                tab: content.item || content.itemDescription\n                                                            }">\n                                                            @if (folio.folioLinkTo) {\n                                                                <a\n                                                                    (click)="\n                                                                        selectSvgSheet(\n                                                                            content.itemLinkTo.complexId,\n                                                                            folio.folioLinkTo\n                                                                        )\n                                                                    "\n                                                                    ><ng-template\n                                                                        *ngTemplateOutlet="\n                                                                            folioTemplate;\n                                                                            context: { $implicit: folio }\n                                                                        "></ng-template\n                                                                ></a>\n                                                            }\n                                                            @if (!folio.folioLinkTo) {\n                                                                <ng-template\n                                                                    *ngTemplateOutlet="\n                                                                        folioTemplate;\n                                                                        context: { $implicit: folio }\n                                                                    "></ng-template>\n                                                            }\n                                                            @if (folio.folioDescription) {\n                                                                <span\n                                                                    class="awg-source-description-content-item-folio-description"\n                                                                    >&nbsp;&nbsp;<span\n                                                                        [compile-html]="folio.folioDescription"\n                                                                        [compile-html-ref]="ref"></span\n                                                                ></span>\n                                                            }\n                                                        </span>\n                                                    }\n                                                    <ng-template #folioTemplate let-folio>\n                                                        <span>\n                                                            @if (folio.isPage) {\n                                                                <span>S.&nbsp;</span>\n                                                            } @else {\n                                                                <span>Bl.&nbsp;</span>\n                                                            }\n                                                            @if (\n                                                                folio.folio.endsWith(\'v\') || folio.folio.endsWith(\'r\')\n                                                            ) {\n                                                                <span\n                                                                    class="awg-source-description-content-item-folio-number"\n                                                                    >{{ folio.folio.slice(0, -1)\n                                                                    }}<sup\n                                                                        class="awg-source-description-content-item-folio-side"\n                                                                        >{{ folio.folio.slice(-1) }}</sup\n                                                                    ></span\n                                                                >\n                                                            } @else {\n                                                                <span>{{ folio.folio }}</span>\n                                                            }\n                                                        </span>\n                                                    </ng-template>\n                                                    \x3c!-- content.folios.systemGroups --\x3e\n                                                    @if (utils.isNotEmptyArray(folio.systemGroups)) {\n                                                        @for (\n                                                            systemGroup of folio.systemGroups;\n                                                            track systemGroup;\n                                                            let firstSystemGroup = $first;\n                                                            let lastSystemGroup = $last\n                                                        ) {\n                                                            @for (\n                                                                system of systemGroup;\n                                                                track system;\n                                                                let i = $index;\n                                                                let firstSystem = $first;\n                                                                let lastSystem = $last\n                                                            ) {\n                                                                @if (system.system) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-system"\n                                                                        [ngClass]="{\n                                                                            tab: system.row && !firstSystem,\n                                                                            singletab:\n                                                                                (system.row &&\n                                                                                    !firstSystemGroup &&\n                                                                                    firstSystem &&\n                                                                                    folio.folio.length === 1) ||\n                                                                                (system.measure &&\n                                                                                    !firstSystemGroup &&\n                                                                                    folio.folio.length === 1),\n                                                                            tab: system.row && !firstSystem,\n                                                                            doubletab:\n                                                                                (system.row &&\n                                                                                    !firstSystemGroup &&\n                                                                                    firstSystem &&\n                                                                                    folio.folio.length === 2) ||\n                                                                                (system.measure &&\n                                                                                    !firstSystemGroup &&\n                                                                                    folio.folio.length === 2),\n                                                                            doubletab_two:\n                                                                                (system.row &&\n                                                                                    !firstSystemGroup &&\n                                                                                    firstSystem &&\n                                                                                    folio.folio.length > 2) ||\n                                                                                (system.measure &&\n                                                                                    !firstSystemGroup &&\n                                                                                    folio.folio.length > 2)\n                                                                        }"\n                                                                        ><ng-template\n                                                                            *ngTemplateOutlet="\n                                                                                systemTemplate;\n                                                                                context: { $implicit: system.system }\n                                                                            "></ng-template\n                                                                    ></span>\n                                                                }\n                                                                <ng-template #systemTemplate let-system\n                                                                    >&nbsp;&nbsp;System&nbsp;{{\n                                                                        system\n                                                                    }}:&nbsp;</ng-template\n                                                                >\n                                                                @if (system.systemDescription) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-system-description">\n                                                                        <span\n                                                                            [compile-html]="system.systemDescription"\n                                                                            [compile-html-ref]="ref"></span>\n                                                                        @if (system.measure) {\n                                                                            <span>&nbsp;</span>\n                                                                        }\n                                                                    </span>\n                                                                }\n                                                                @if (system.measure) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-measure">\n                                                                        @if (system.linkTo) {\n                                                                            <a\n                                                                                (click)="\n                                                                                    selectSvgSheet(\n                                                                                        content.itemLinkTo.complexId,\n                                                                                        system.linkTo\n                                                                                    )\n                                                                                "\n                                                                                ><ng-template\n                                                                                    *ngTemplateOutlet="\n                                                                                        measureTemplate;\n                                                                                        context: {\n                                                                                            $implicit: system.measure\n                                                                                        }\n                                                                                    "></ng-template\n                                                                            ></a>\n                                                                        }\n                                                                        @if (!system.linkTo) {\n                                                                            <ng-template\n                                                                                *ngTemplateOutlet="\n                                                                                    measureTemplate;\n                                                                                    context: {\n                                                                                        $implicit: system.measure\n                                                                                    }\n                                                                                "></ng-template>\n                                                                        }\n                                                                        <ng-template #measureTemplate let-measure\n                                                                            ><span\n                                                                                >T.&nbsp;{{ measure }}</span\n                                                                            ></ng-template\n                                                                        ></span\n                                                                    >\n                                                                }\n                                                                @if (utils.isNotEmptyObject(system.row)) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-row">\n                                                                        @if (system.linkTo) {\n                                                                            <a\n                                                                                (click)="\n                                                                                    selectSvgSheet(\n                                                                                        content.itemLinkTo.complexId,\n                                                                                        system.linkTo\n                                                                                    )\n                                                                                "\n                                                                                ><ng-template\n                                                                                    *ngTemplateOutlet="\n                                                                                        rowTemplate;\n                                                                                        context: {\n                                                                                            $implicit: system.row\n                                                                                        }\n                                                                                    "></ng-template>\n                                                                            </a>\n                                                                        }\n                                                                        @if (!system.linkTo) {\n                                                                            <ng-template\n                                                                                *ngTemplateOutlet="\n                                                                                    rowTemplate;\n                                                                                    context: { $implicit: system.row }\n                                                                                "></ng-template>\n                                                                        }\n                                                                        <ng-template #rowTemplate let-row>\n                                                                            <span\n                                                                                >{{ row.rowType\n                                                                                }}<sub>{{ row.rowBase }}</sub> ({{\n                                                                                    row.rowNumber\n                                                                                }})</span\n                                                                            ></ng-template\n                                                                        ></span\n                                                                    >\n                                                                }\n                                                                @if (lastFolio && lastSystemGroup && lastSystem) {\n                                                                    <span>.</span>\n                                                                } @else {\n                                                                    <span\n                                                                        >;\n                                                                        @if ((i + 1) % systemGroup.length === 0) {\n                                                                            <br />\n                                                                        }\n                                                                    </span>\n                                                                }\n                                                            }\n                                                        }\n                                                    } @else {\n                                                        @if (!lastFolio) {\n                                                            <br />\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        </p>\n                                    }\n                                </div>\n                            }\n                        </div>\n                    }\n                </div>\n            </div>\n        }\n    </div>\n}\n',changeDetection:t.Ngq.OnPush,styles:[_()]})],f);var E=e(6907),k=e.n(E),w=e(5110);let v=class{constructor(n){this.utils=n,this.navigateToReportFragmentRequest=new t.bkB,this.openModalRequest=new t.bkB,this.selectSvgSheetRequest=new t.bkB,this.ref=this}get editionRouteConstants(){return w.vD}navigateToReportFragment(n){n&&this.navigateToReportFragmentRequest.emit(n)}openModal(n){n&&this.openModalRequest.emit(n)}selectSvgSheet(n,i){i&&this.selectSvgSheetRequest.emit({complexId:n,sheetId:i})}static#n=this.ctorParameters=()=>[{type:u.QY}];static#t=this.propDecorators={editionComplex:[{type:t.pde}],sourceEvaluationListData:[{type:t.pde}],navigateToReportFragmentRequest:[{type:t.k7i}],openModalRequest:[{type:t.k7i}],selectSvgSheetRequest:[{type:t.k7i}]}};v=(0,s.Cg)([(0,t.uAl)({selector:"awg-source-evaluation",template:'@if (sourceEvaluationListData) {\n    <div class="awg-source-evaluation-list card">\n        <div class="card-body">\n            @if (utils.isNotEmptyArray(sourceEvaluationListData.sources?.[0]?.content)) {\n                @for (evaluation of sourceEvaluationListData.sources?.[0]?.content; track evaluation) {\n                    <p class="awg-source-evaluation-entry" [compile-html]="evaluation" [compile-html-ref]="this"></p>\n                }\n            } @else {\n                <p class="awg-source-evaluation-empty p-5 border rounded-3">\n                    <small class="text-muted"\n                        >[Die Quellenbewertung zum Editionskomplex\n                        <span [innerHTML]="editionComplex.complexId.full"></span> erscheint im Zusammenhang der\n                        vollsta\u0308ndigen Edition von {{ editionComplex.complexId.short }} in\n                        {{ editionRouteConstants.EDITION.short }} {{ editionComplex.series.short }}/{{\n                            editionComplex.section.short\n                        }}.]\n                    </small>\n                </p>\n            }\n        </div>\n    </div>\n}\n',changeDetection:t.Ngq.OnPush,styles:[k()]})],v);var I=e(8707),$=e.n(I);let h=class{constructor(n){this.utils=n,this.navigateToReportFragmentRequest=new t.bkB,this.openModalRequest=new t.bkB,this.ref=this}navigateToReportFragment(n){n&&this.navigateToReportFragmentRequest.emit(n)}openModal(n){n&&this.openModalRequest.emit(n)}static#n=this.ctorParameters=()=>[{type:u.QY}];static#t=this.propDecorators={sourceListData:[{type:t.pde}],navigateToReportFragmentRequest:[{type:t.k7i}],openModalRequest:[{type:t.k7i}]}};h=(0,s.Cg)([(0,t.uAl)({selector:"awg-source-list",template:'<div class="card">\n    <div class="card-body">\n        <table aria-label="Table for list of sources" class="table table-hover borderless awg-source-list-sources">\n            <tbody>\n                @for (source of sourceListData.sources; track source; let sourceIndex = $index) {\n                    <tr>\n                        <th scope="row" id="{{ source.siglum }}{{ source.siglumAddendum }}">\n                            @if (source.hasDescription === true) {\n                                <a (click)="navigateToReportFragment(source.linkTo)">\n                                    @if (source.missing) {\n                                        <span>[</span>\n                                    }\n                                    <span class="awg-source-list-siglum">{{ source.siglum }}</span>\n                                    @if (source.siglumAddendum) {\n                                        <span class="awg-source-list-siglum-addendum">\n                                            <sup>{{ source.siglumAddendum }}</sup>\n                                        </span>\n                                    }\n                                    @if (source.missing) {\n                                        <span>]</span>\n                                    }\n                                </a>\n                            } @else {\n                                <a (click)="openModal(source.linkTo)">\n                                    @if (source.missing) {\n                                        <span>[</span>\n                                    }\n                                    <span class="awg-source-list-siglum">{{ source.siglum }}</span>\n                                    @if (source.siglumAddendum) {\n                                        <span class="awg-source-list-siglum-addendum">\n                                            <sup>{{ source.siglumAddendum }}</sup>\n                                        </span>\n                                    }\n                                    @if (source.missing) {\n                                        <span>]</span>\n                                    }\n                                </a>\n                            }\n                        </th>\n                        <td>\n                            <span [compile-html]="source.type" [compile-html-ref]="ref"></span> <br />\n                            <span class="text-muted" [innerHTML]="source.location"></span>\n                        </td>\n                    </tr>\n                }\n            </tbody>\n        </table>\n        @if (utils.isNotEmptyArray(sourceListData.textSources)) {\n            <table\n                aria-label="Table for list of text sources"\n                class="table table-hover borderless awg-source-list-text-sources">\n                <tbody>\n                    <tr>\n                        <td colspan="2">Zum vertonten Text:</td>\n                    </tr>\n                    @for (text of sourceListData.textSources; track text; let textIndex = $index) {\n                        <tr>\n                            <th scope="row" id="{{ text.id }}">\n                                <span class="awg-source-list-text-siglum-container"\n                                    ><span class="awg-source-list-text-siglum">{{ text.siglum }}</span>\n                                    @if (text.siglumAddendum) {\n                                        <span class="awg-source-list-text-siglum-addendum"\n                                            ><sup>{{ text.siglumAddendum }}</sup></span\n                                        >\n                                    }\n                                </span>\n                            </th>\n                            <td>\n                                <span [compile-html]="text.type" [compile-html-ref]="ref"></span> <br />\n                                <span class="text-muted" [innerHTML]="text.location"></span>\n                            </td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        }\n    </div>\n</div>\n',changeDetection:t.Ngq.OnPush,styles:[$()]})],h);var N=e(5827),F=e.n(N);let R=class{constructor(n){this.utils=n,this.navigateToReportFragmentRequest=new t.bkB,this.openModalRequest=new t.bkB,this.selectSvgSheetRequest=new t.bkB,this.ref=this}navigateToReportFragment(n){n&&this.navigateToReportFragmentRequest.emit(n)}openModal(n){n&&this.openModalRequest.emit(n)}selectSvgSheet(n){n?.sheetId&&this.selectSvgSheetRequest.emit(n)}static#n=this.ctorParameters=()=>[{type:u.QY}];static#t=this.propDecorators={textcriticsData:[{type:t.pde}],navigateToReportFragmentRequest:[{type:t.k7i}],openModalRequest:[{type:t.k7i}],selectSvgSheetRequest:[{type:t.k7i}]}};R=(0,s.Cg)([(0,t.uAl)({selector:"awg-textcritics-list",template:'@if (textcriticsData) {\n    <div ngbAccordion>\n        @for (textcritic of textcriticsData.textcritics; track textcritic) {\n            <div [ngbAccordionItem]="textcritic.id" [collapsed]="true">\n                <div\n                    ngbAccordionHeader\n                    class="accordion-button awg-accordion-button-custom-header justify-content-between">\n                    <button ngbAccordionToggle class="btn btn-link text-start p-0">{{ textcritic.label }}</button>\n                    <button\n                        type="button"\n                        class="btn btn-sm btn-outline-info"\n                        (click)="selectSvgSheet({ complexId: \'\', sheetId: textcritic.id })">\n                        Zum edierten Notentext\n                    </button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (utils.isNotEmptyArray(textcritic.description)) {\n                                <div>\n                                    <p class="smallcaps">Skizzenkommentar:</p>\n                                    <awg-edition-tka-description\n                                        [textcriticalDescriptions]="textcritic.description"\n                                        (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                                        (openModalRequest)="openModal($event)"\n                                        (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-tka-description>\n                                </div>\n                            }\n                            @if (utils.isNotEmptyArray(textcritic.comments)) {\n                                <div>\n                                    <p class="smallcaps">Textkritischer Kommentar:</p>\n                                    <awg-edition-tka-table\n                                        [textcriticalComments]="textcritic.comments"\n                                        [isRowTable]="textcritic.rowtable"\n                                        (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                                        (openModalRequest)="openModal($event)"\n                                        (selectSvgSheetRequest)="selectSvgSheet($event)">\n                                    </awg-edition-tka-table>\n                                </div>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        }\n    </div>\n}\n',changeDetection:t.Ngq.OnPush,styles:[F()]})],R);var S=e(4308);var q=e(4201),B=e.n(q),j=e(983),W=e(5558),G=e(9437),D=e(7773);let d=class{constructor(n,i,l){this.editionDataService=n,this.editionService=i,this.router=l,this.errorObject=null,this.titles={sourceList:"1. Quellen\xfcbersicht",sourceDescription:"2. Quellenbeschreibung",sourceEvaluation:"3. Quellenbewertung",tka:"4. Textkritische Anmerkungen"}}get editionRouteConstants(){return w.vD}ngOnInit(){this.getEditionReportData()}getEditionReportData(){this.editionReportData$=this.editionService.getEditionComplex().pipe((0,W.n)(n=>(this.editionComplex=n,this.editionDataService.getEditionReportData(this.editionComplex))),(0,G.W)(n=>(this.errorObject=n,j.w)))}onModalOpen(n){n&&this.modal.open(n)}onReportFragmentNavigate(n){n||(n="");const i={fragment:n};this.router.navigate([this.editionComplex.baseRoute,this.editionRouteConstants.EDITION_REPORT.route],i)}onSvgSheetSelect(n){const i=n?.complexId?`/edition/complex/${n?.complexId}/`:this.editionComplex.baseRoute,m={queryParams:{id:n?.sheetId??""}};this.router.navigate([i,this.editionRouteConstants.EDITION_SHEETS.route],m)}static#n=this.ctorParameters=()=>[{type:D.U7},{type:D.s9},{type:S.Ix}];static#t=this.propDecorators={modal:[{type:t.Uct,args:["modal",{static:!0}]}]}};d=(0,s.Cg)([(0,t.uAl)({selector:"awg-edition-report",template:'\x3c!-- content: edition report --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    @if (editionReportData$ | async; as editionReportData) {\n        <div ngbAccordion>\n            \x3c!-- source list --\x3e\n            <div ngbAccordionItem="awg-source-list" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.sourceList }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[0]) {\n                                <awg-source-list\n                                    [sourceListData]="editionReportData[0]"\n                                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                                    (openModalRequest)="onModalOpen($event)">\n                                </awg-source-list>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- source description --\x3e\n            <div ngbAccordionItem="awg-source-desc" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.sourceDescription }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[1]) {\n                                <awg-source-description\n                                    [sourceDescriptionListData]="editionReportData[1]"\n                                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                                    (openModalRequest)="onModalOpen($event)"\n                                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                                </awg-source-description>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- source evaluation --\x3e\n            <div ngbAccordionItem="awg-source-evaluation" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.sourceEvaluation }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[2]) {\n                                <awg-source-evaluation\n                                    [editionComplex]="editionComplex"\n                                    [sourceEvaluationListData]="editionReportData[2]"\n                                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                                    (openModalRequest)="onModalOpen($event)"\n                                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                                </awg-source-evaluation>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- text critics --\x3e\n            <div ngbAccordionItem="awg-tka-panel" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.tka }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[3]) {\n                                <awg-textcritics-list\n                                    [textcriticsData]="editionReportData[3]"\n                                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                                    (openModalRequest)="onModalOpen($event)"\n                                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                                </awg-textcritics-list>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n</div>\n',changeDetection:t.Ngq.OnPush,styles:[B()]})],d);const H=[{path:"",component:d,data:{title:"AWG Online Edition \u2013 Report"}}],Q=[d];let y=class{};y=(0,s.Cg)([(0,t.UQu)({imports:[S.iI.forChild(H)],exports:[S.iI]})],y);let b=class{};b=(0,s.Cg)([(0,t.UQu)({imports:[o.G,T.l,y],declarations:[R,f,v,h,Q]})],b)},4201:(a,c,e)=>{var s=e(8564),o=e(8557)(s);o.push([a.id,"",""]),a.exports=o.toString()},1457:(a,c,e)=>{var s=e(8564),o=e(8557)(s);o.push([a.id,"",""]),a.exports=o.toString()},6907:(a,c,e)=>{var s=e(8564),o=e(8557)(s);o.push([a.id,"",""]),a.exports=o.toString()},8707:(a,c,e)=>{var s=e(8564),o=e(8557)(s);o.push([a.id,"table.awg-source-list-sources > tbody > tr > th {\n  white-space: nowrap;\n}",""]),a.exports=o.toString()},5827:(a,c,e)=>{var s=e(8564),o=e(8557)(s);o.push([a.id,"",""]),a.exports=o.toString()}}]);